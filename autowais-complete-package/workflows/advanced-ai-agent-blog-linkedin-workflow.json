{
  "name": "Advanced AI Agent Blog & LinkedIn Automation",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerInterval": "days",
              "daysBetweenTriggers": 1,
              "triggerAtHour": 9,
              "triggerAtMinute": 0
            }
          ]
        }
      },
      "name": "Daily Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [200, 300],
      "id": "daily-trigger-001"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "ai-blog-webhook",
        "responseMode": "responseNode",
        "options": {
          "rawBody": false
        }
      },
      "name": "Manual Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [200, 500],
      "webhookId": "ai-blog-webhook-v1",
      "id": "webhook-trigger-001"
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "name": "Merge Triggers",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [400, 400],
      "id": "merge-triggers-001"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "system_context",
              "name": "system_context",
              "value": "={{ JSON.stringify({\n  timestamp: $now,\n  date: $now.format('YYYY-MM-DD'),\n  dayOfWeek: $now.format('dddd'),\n  timeOfDay: $now.format('HH:mm'),\n  requestType: $json.type || 'scheduled',\n  channel: $json.channel || 'automation',\n  userId: $json.userId || 'system',\n  sessionId: $runId\n}) }}",
              "type": "string"
            },
            {
              "id": "business_topics",
              "name": "business_topics",
              "value": "[\"AI Automation\", \"Digital Transformation\", \"Workflow Optimization\", \"Business Intelligence\", \"API Integration\", \"Cloud Migration\", \"Data Analytics\", \"Cybersecurity\", \"Remote Work Tools\", \"E-commerce Solutions\", \"Machine Learning\", \"Process Automation\", \"Customer Experience\", \"Data Science\", \"DevOps\"]",
              "type": "string"
            },
            {
              "id": "content_strategies",
              "name": "content_strategies",
              "value": "[\"thought_leadership\", \"case_study\", \"how_to_guide\", \"industry_analysis\", \"trend_prediction\", \"best_practices\", \"tool_comparison\", \"success_story\"]",
              "type": "string"
            }
          ]
        }
      },
      "name": "Initialize System Context",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [600, 400],
      "id": "system-context-001"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  c.topic,\n  c.performance_score,\n  c.engagement_rate,\n  c.last_used,\n  COUNT(p.id) as usage_count\nFROM content_topics c\nLEFT JOIN posts p ON c.topic = p.topic\nWHERE c.performance_score > 0.7\nGROUP BY c.topic, c.performance_score, c.engagement_rate, c.last_used\nORDER BY c.performance_score DESC, c.engagement_rate DESC\nLIMIT 10;",
        "options": {}
      },
      "name": "Check Content Performance Database",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [800, 300],
      "credentials": {
        "postgres": {
          "id": "content-db-postgres",
          "name": "Content Performance DB"
        }
      },
      "id": "content-db-check-001"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  u.name,\n  u.industry,\n  u.company_size,\n  u.interests,\n  u.last_engagement,\n  u.preferred_content_type,\n  u.engagement_score\nFROM users u\nWHERE u.active = true\nAND u.last_engagement > NOW() - INTERVAL '30 days'\nORDER BY u.engagement_score DESC\nLIMIT 100;",
        "options": {}
      },
      "name": "Analyze Audience Database",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [800, 500],
      "credentials": {
        "postgres": {
          "id": "audience-db-postgres",
          "name": "Audience Analytics DB"
        }
      },
      "id": "audience-db-check-001"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ JSON.stringify({\n  systemContext: JSON.parse($('Initialize System Context').item.json.system_context),\n  contentPerformance: $('Check Content Performance Database').all(),\n  audienceInsights: $('Analyze Audience Database').all(),\n  businessTopics: JSON.parse($('Initialize System Context').item.json.business_topics),\n  contentStrategies: JSON.parse($('Initialize System Context').item.json.content_strategies)\n}) }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "# Master AI Content Strategy Agent\n\nYou are an advanced AI agent responsible for creating data-driven content strategies. You have access to:\n\n## Your Capabilities\n1. **Performance Analytics**: Real-time content performance data\n2. **Audience Intelligence**: User behavior and engagement patterns\n3. **Market Analysis**: Industry trends and competitive insights\n4. **Content Optimization**: AI-driven content recommendations\n5. **Strategic Planning**: Long-term content roadmap development\n\n## Your Mission\nAnalyze the provided data and create an optimal content strategy for today's blog post and LinkedIn content.\n\n## Decision Framework\n1. **Analyze Performance Data**: Identify top-performing topics and formats\n2. **Understand Audience**: Segment audience preferences and engagement patterns\n3. **Select Strategy**: Choose the most effective content approach\n4. **Optimize Timing**: Consider current trends and audience activity\n5. **Personalize Content**: Tailor to audience segments and preferences\n\n## Output Requirements\nProvide a comprehensive content strategy in JSON format:\n\n```json\n{\n  \"selectedTopic\": \"Chosen topic from analysis\",\n  \"contentStrategy\": \"Selected strategy type\",\n  \"targetAudience\": \"Primary audience segment\",\n  \"keyMessages\": [\"message1\", \"message2\", \"message3\"],\n  \"contentAngle\": \"Unique perspective or approach\",\n  \"expectedEngagement\": \"Predicted engagement level\",\n  \"seoKeywords\": [\"keyword1\", \"keyword2\", \"keyword3\"],\n  \"linkedinHooks\": [\"hook1\", \"hook2\", \"hook3\"],\n  \"callToAction\": \"Specific CTA recommendation\",\n  \"contentLength\": \"Recommended word count\",\n  \"tone\": \"Recommended tone (professional, conversational, etc.)\",\n  \"reasoning\": \"Why this strategy was chosen\",\n  \"successMetrics\": [\"metric1\", \"metric2\", \"metric3\"]\n}\n```\n\n## Current Context\n- Date: {{ $now.format('YYYY-MM-DD') }}\n- Day: {{ $now.format('dddd') }}\n- Time: {{ $now.format('HH:mm') }}\n\nMake data-driven decisions based on the performance analytics and audience insights provided."
        }
      },
      "name": "AI Strategy Agent",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1.3,
      "position": [1000, 400],
      "credentials": {
        "openAiApi": {
          "id": "openai-api-key",
          "name": "OpenAI API"
        }
      },
      "id": "ai-strategy-agent-001"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ JSON.stringify({\n  strategy: JSON.parse($('AI Strategy Agent').item.json.choices[0].message.content),\n  systemContext: JSON.parse($('Initialize System Context').item.json.system_context)\n}) }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "# Expert Content Creation Agent\n\nYou are a world-class content creator specializing in business technology and digital transformation. You have deep expertise in:\n\n## Core Competencies\n- Business Technology Writing\n- Digital Transformation Strategies\n- AI and Automation Insights\n- Industry Analysis and Trends\n- Thought Leadership Content\n- SEO-Optimized Writing\n- Engaging Storytelling\n\n## Content Creation Standards\n- **Quality**: Exceptional, publication-ready content\n- **Authority**: Demonstrate deep expertise and credibility\n- **Engagement**: Captivating and valuable to readers\n- **Actionability**: Provide concrete, implementable insights\n- **Originality**: Fresh perspectives and unique angles\n\n## Your Mission\nCreate a comprehensive, high-quality blog post based on the provided strategy.\n\n## Content Structure Requirements\n1. **Compelling Headline**: Attention-grabbing and SEO-optimized\n2. **Engaging Introduction**: Hook readers immediately\n3. **Structured Body**: Clear sections with actionable insights\n4. **Supporting Evidence**: Statistics, examples, case studies\n5. **Practical Applications**: How-to guidance and best practices\n6. **Strong Conclusion**: Memorable takeaways and clear CTA\n\n## Output Format\nProvide the complete blog post in JSON format:\n\n```json\n{\n  \"title\": \"SEO-optimized headline\",\n  \"subtitle\": \"Compelling subtitle\",\n  \"metaDescription\": \"155-character meta description\",\n  \"introduction\": \"Engaging opening paragraph\",\n  \"content\": \"Full blog post content with headers and formatting\",\n  \"keyTakeaways\": [\"takeaway1\", \"takeaway2\", \"takeaway3\"],\n  \"conclusion\": \"Strong closing paragraph\",\n  \"callToAction\": \"Specific CTA text\",\n  \"tags\": [\"tag1\", \"tag2\", \"tag3\"],\n  \"category\": \"Content category\",\n  \"readingTime\": \"Estimated reading time\",\n  \"wordCount\": \"Actual word count\",\n  \"seoScore\": \"Estimated SEO score (1-100)\",\n  \"engagementPrediction\": \"Predicted engagement level\"\n}\n```\n\n## Quality Standards\n- Word count: 1000-1500 words\n- Reading level: Professional but accessible\n- SEO optimization: Natural keyword integration\n- Fact-checking: Accurate information and statistics\n- Originality: Unique insights and perspectives\n\nCreate content that establishes thought leadership and drives meaningful engagement."
        }
      },
      "name": "AI Content Creator Agent",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1.3,
      "position": [1200, 400],
      "credentials": {
        "openAiApi": {
          "id": "openai-api-key",
          "name": "OpenAI API"
        }
      },
      "id": "ai-content-creator-001"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ JSON.stringify({\n  blogContent: JSON.parse($('AI Content Creator Agent').item.json.choices[0].message.content),\n  strategy: JSON.parse($('AI Strategy Agent').item.json.choices[0].message.content),\n  audienceData: $('Analyze Audience Database').all()\n}) }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "# LinkedIn Content Optimization Agent\n\nYou are a LinkedIn content strategist with expertise in:\n\n## Specializations\n- LinkedIn Algorithm Optimization\n- Professional Network Engagement\n- B2B Content Strategy\n- Social Media Psychology\n- Viral Content Creation\n- Community Building\n- Thought Leadership Positioning\n\n## LinkedIn Best Practices\n- **Hook Strategy**: Compelling first line to stop scrolling\n- **Format Optimization**: Strategic line breaks and spacing\n- **Engagement Triggers**: Questions, polls, and calls for comments\n- **Hashtag Strategy**: Relevant, trending, and niche hashtags\n- **Timing Optimization**: Post when audience is most active\n- **Visual Elements**: Emojis and formatting for readability\n\n## Your Mission\nTransform the blog content into a high-performing LinkedIn post that maximizes engagement and reach.\n\n## Content Transformation Strategy\n1. **Extract Key Insights**: Identify the most engaging points\n2. **Create Compelling Hook**: Attention-grabbing opening line\n3. **Structure for Skimming**: Easy-to-read format with breaks\n4. **Add Social Proof**: Include relevant statistics or examples\n5. **Optimize for Engagement**: End with engaging question or CTA\n6. **Strategic Hashtags**: Mix of popular and niche tags\n\n## Output Format\nProvide the optimized LinkedIn content in JSON format:\n\n```json\n{\n  \"linkedinPost\": \"Complete LinkedIn post text with formatting\",\n  \"hook\": \"Compelling opening line\",\n  \"coreMessage\": \"Main value proposition\",\n  \"engagementQuestion\": \"Question to drive comments\",\n  \"hashtags\": [\"#hashtag1\", \"#hashtag2\", \"#hashtag3\"],\n  \"postType\": \"Content type (insight, story, tips, etc.)\",\n  \"targetAudience\": \"Primary audience segment\",\n  \"expectedReach\": \"Predicted reach estimate\",\n  \"engagementPrediction\": \"Predicted engagement rate\",\n  \"optimalPostTime\": \"Best time to post\",\n  \"contentPillars\": [\"pillar1\", \"pillar2\"],\n  \"callToAction\": \"Specific action for readers\",\n  \"characterCount\": \"Total character count\",\n  \"readabilityScore\": \"Readability score (1-100)\"\n}\n```\n\n## LinkedIn Optimization Rules\n- Character limit: 1300-1500 characters (optimal)\n- Line breaks: Every 2-3 lines for readability\n- Emojis: Strategic use for visual appeal\n- Hashtags: 3-5 relevant tags\n- Questions: Always end with engagement trigger\n- Value: Provide actionable insights\n\nCreate content that drives meaningful professional conversations and builds thought leadership."
        }
      },
      "name": "AI LinkedIn Optimizer Agent",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1.3,
      "position": [1400, 400],
      "credentials": {
        "openAiApi": {
          "id": "openai-api-key",
          "name": "OpenAI API"
        }
      },
      "id": "ai-linkedin-optimizer-001"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "upload",
        "name": "blog-post-{{ JSON.parse($('Initialize System Context').item.json.system_context).date }}.md",
        "parents": {
          "parentId": "YOUR_GOOGLE_DRIVE_FOLDER_ID"
        },
        "options": {
          "mimeType": "text/markdown"
        }
      },
      "name": "Save Blog to Google Drive",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [1600, 300],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "google-drive-oauth2",
          "name": "Google Drive OAuth2"
        }
      },
      "id": "google-drive-save-001"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "YOUR_GOOGLE_SHEETS_ID",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "Blog_Content_Tracker",
          "mode": "name"
        },
        "options": {
          "valueInputMode": "USER_ENTERED"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "values": {
            "Date": "={{ JSON.parse($('Initialize System Context').item.json.system_context).date }}",
            "Title": "={{ JSON.parse($('AI Content Creator Agent').item.json.choices[0].message.content).title }}",
            "Content_Strategy": "={{ JSON.parse($('AI Strategy Agent').item.json.choices[0].message.content).contentStrategy }}",
            "Target_Audience": "={{ JSON.parse($('AI Strategy Agent').item.json.choices[0].message.content).targetAudience }}",
            "Word_Count": "={{ JSON.parse($('AI Content Creator Agent').item.json.choices[0].message.content).wordCount }}",
            "SEO_Score": "={{ JSON.parse($('AI Content Creator Agent').item.json.choices[0].message.content).seoScore }}",
            "LinkedIn_Post": "={{ JSON.parse($('AI LinkedIn Optimizer Agent').item.json.choices[0].message.content).linkedinPost }}",
            "Expected_Engagement": "={{ JSON.parse($('AI LinkedIn Optimizer Agent').item.json.choices[0].message.content).engagementPrediction }}",
            "Drive_File_ID": "={{ $('Save Blog to Google Drive').item.json.id }}",
            "Drive_File_URL": "={{ $('Save Blog to Google Drive').item.json.webViewLink }}",
            "Status": "Generated",
            "Created_Time": "={{ $now.format('YYYY-MM-DD HH:mm:ss') }}",
            "AI_Strategy_Used": "={{ JSON.parse($('AI Strategy Agent').item.json.choices[0].message.content).reasoning }}",
            "Hashtags": "={{ JSON.parse($('AI LinkedIn Optimizer Agent').item.json.choices[0].message.content).hashtags.join(', ') }}",
            "Content_Pillars": "={{ JSON.parse($('AI LinkedIn Optimizer Agent').item.json.choices[0].message.content).contentPillars.join(', ') }}"
          }
        }
      },
      "name": "Track in Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.4,
      "position": [1600, 500],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "google-sheets-oauth2",
          "name": "Google Sheets OAuth2"
        }
      },
      "id": "google-sheets-track-001"
    },
    {
      "parameters": {
        "authentication": "standard",
        "resource": "post",
        "postAs": "person",
        "person": "{{ $vars.LINKEDIN_PERSON_ID }}",
        "text": "{{ JSON.parse($('AI LinkedIn Optimizer Agent').item.json.choices[0].message.content).linkedinPost }}\n\n{{ JSON.parse($('AI LinkedIn Optimizer Agent').item.json.choices[0].message.content).hashtags.join(' ') }}"
      },
      "name": "Post to LinkedIn",
      "type": "n8n-nodes-base.linkedIn",
      "typeVersion": 1,
      "position": [1800, 400],
      "credentials": {
        "linkedInOAuth2Api": {
          "id": "linkedin-oauth2",
          "name": "LinkedIn OAuth2"
        }
      },
      "id": "linkedin-post-001"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO content_performance (\n  date,\n  title,\n  topic,\n  strategy,\n  word_count,\n  seo_score,\n  linkedin_post_id,\n  expected_engagement,\n  drive_file_id,\n  ai_strategy_reasoning,\n  hashtags,\n  content_pillars,\n  created_at\n) VALUES (\n  '{{ JSON.parse($('Initialize System Context').item.json.system_context).date }}',\n  '{{ JSON.parse($('AI Content Creator Agent').item.json.choices[0].message.content).title }}',\n  '{{ JSON.parse($('AI Strategy Agent').item.json.choices[0].message.content).selectedTopic }}',\n  '{{ JSON.parse($('AI Strategy Agent').item.json.choices[0].message.content).contentStrategy }}',\n  {{ JSON.parse($('AI Content Creator Agent').item.json.choices[0].message.content).wordCount }},\n  {{ JSON.parse($('AI Content Creator Agent').item.json.choices[0].message.content).seoScore }},\n  '{{ $('Post to LinkedIn').item.json.id }}',\n  '{{ JSON.parse($('AI LinkedIn Optimizer Agent').item.json.choices[0].message.content).engagementPrediction }}',\n  '{{ $('Save Blog to Google Drive').item.json.id }}',\n  '{{ JSON.parse($('AI Strategy Agent').item.json.choices[0].message.content).reasoning }}',\n  '{{ JSON.parse($('AI LinkedIn Optimizer Agent').item.json.choices[0].message.content).hashtags.join(', ') }}',\n  '{{ JSON.parse($('AI LinkedIn Optimizer Agent').item.json.choices[0].message.content).contentPillars.join(', ') }}',\n  NOW()\n);",
        "options": {}
      },
      "name": "Update Performance Database",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [2000, 300],
      "credentials": {
        "postgres": {
          "id": "content-db-postgres",
          "name": "Content Performance DB"
        }
      },
      "id": "update-performance-db-001"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ JSON.stringify({\n  executionResults: {\n    strategy: JSON.parse($('AI Strategy Agent').item.json.choices[0].message.content),\n    content: JSON.parse($('AI Content Creator Agent').item.json.choices[0].message.content),\n    linkedin: JSON.parse($('AI LinkedIn Optimizer Agent').item.json.choices[0].message.content),\n    linkedinPostId: $('Post to LinkedIn').item.json.id,\n    driveFileId: $('Save Blog to Google Drive').item.json.id,\n    timestamp: $now\n  },\n  systemContext: JSON.parse($('Initialize System Context').item.json.system_context)\n}) }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "# AI Performance Analysis Agent\n\nYou are an advanced AI agent responsible for analyzing the performance and quality of the content creation process.\n\n## Your Responsibilities\n1. **Quality Assessment**: Evaluate content quality and effectiveness\n2. **Performance Prediction**: Predict likely engagement and reach\n3. **Optimization Recommendations**: Suggest improvements for future content\n4. **Success Metrics**: Define and track key performance indicators\n5. **Learning Integration**: Identify patterns for continuous improvement\n\n## Analysis Framework\n- **Content Quality**: Assess writing quality, structure, and value\n- **Strategy Effectiveness**: Evaluate strategy selection and execution\n- **Audience Alignment**: Check alignment with target audience\n- **Engagement Potential**: Predict social media performance\n- **SEO Optimization**: Assess search engine optimization\n- **Brand Consistency**: Ensure brand voice and messaging alignment\n\n## Output Requirements\nProvide a comprehensive analysis in JSON format:\n\n```json\n{\n  \"overallScore\": \"Overall quality score (1-100)\",\n  \"contentQuality\": {\n    \"score\": \"Content quality score (1-100)\",\n    \"strengths\": [\"strength1\", \"strength2\"],\n    \"improvements\": [\"improvement1\", \"improvement2\"]\n  },\n  \"strategyEffectiveness\": {\n    \"score\": \"Strategy score (1-100)\",\n    \"reasoning\": \"Why this strategy was effective\",\n    \"alignment\": \"Audience alignment assessment\"\n  },\n  \"engagementPrediction\": {\n    \"linkedinReach\": \"Predicted LinkedIn reach\",\n    \"linkedinEngagement\": \"Predicted engagement rate\",\n    \"blogViews\": \"Predicted blog views\",\n    \"conversionRate\": \"Predicted conversion rate\"\n  },\n  \"recommendations\": {\n    \"immediate\": [\"immediate action1\", \"immediate action2\"],\n    \"future\": [\"future improvement1\", \"future improvement2\"]\n  },\n  \"learningInsights\": [\"insight1\", \"insight2\", \"insight3\"],\n  \"nextSteps\": [\"step1\", \"step2\", \"step3\"],\n  \"riskAssessment\": \"Potential risks or issues\",\n  \"successProbability\": \"Probability of success (1-100)\"\n}\n```\n\nProvide actionable insights that will improve future content creation cycles."
        }
      },
      "name": "AI Performance Analyzer Agent",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1.3,
      "position": [2000, 500],
      "credentials": {
        "openAiApi": {
          "id": "openai-api-key",
          "name": "OpenAI API"
        }
      },
      "id": "ai-performance-analyzer-001"
    },
    {
      "parameters": {
        "channel": "#ai-content-alerts",
        "text": "🚀 **Advanced AI Content System - Execution Complete!**\n\n**📊 Performance Summary:**\n• **Date:** {{ JSON.parse($('Initialize System Context').item.json.system_context).date }}\n• **Strategy:** {{ JSON.parse($('AI Strategy Agent').item.json.choices[0].message.content).contentStrategy }}\n• **Topic:** {{ JSON.parse($('AI Strategy Agent').item.json.choices[0].message.content).selectedTopic }}\n• **Target Audience:** {{ JSON.parse($('AI Strategy Agent').item.json.choices[0].message.content).targetAudience }}\n\n**📝 Content Metrics:**\n• **Title:** {{ JSON.parse($('AI Content Creator Agent').item.json.choices[0].message.content).title }}\n• **Word Count:** {{ JSON.parse($('AI Content Creator Agent').item.json.choices[0].message.content).wordCount }}\n• **SEO Score:** {{ JSON.parse($('AI Content Creator Agent').item.json.choices[0].message.content).seoScore }}/100\n• **Reading Time:** {{ JSON.parse($('AI Content Creator Agent').item.json.choices[0].message.content).readingTime }}\n\n**📱 LinkedIn Optimization:**\n• **Post ID:** {{ $('Post to LinkedIn').item.json.id }}\n• **Character Count:** {{ JSON.parse($('AI LinkedIn Optimizer Agent').item.json.choices[0].message.content).characterCount }}\n• **Expected Engagement:** {{ JSON.parse($('AI LinkedIn Optimizer Agent').item.json.choices[0].message.content).engagementPrediction }}\n• **Hashtags:** {{ JSON.parse($('AI LinkedIn Optimizer Agent').item.json.choices[0].message.content).hashtags.join(', ') }}\n\n**🔗 Resources:**\n• **Google Drive:** {{ $('Save Blog to Google Drive').item.json.webViewLink }}\n• **LinkedIn Post:** https://linkedin.com/feed/update/{{ $('Post to LinkedIn').item.json.id }}\n\n**🤖 AI Analysis:**\n• **Overall Score:** {{ JSON.parse($('AI Performance Analyzer Agent').item.json.choices[0].message.content).overallScore }}/100\n• **Success Probability:** {{ JSON.parse($('AI Performance Analyzer Agent').item.json.choices[0].message.content).successProbability }}%\n\n**💡 Key Insights:**\n{{ JSON.parse($('AI Performance Analyzer Agent').item.json.choices[0].message.content).learningInsights.join('\\n') }}\n\n**🎯 Next Steps:**\n{{ JSON.parse($('AI Performance Analyzer Agent').item.json.choices[0].message.content).nextSteps.join('\\n') }}\n\n*Powered by Advanced AI Agent System v2.0*",
        "otherOptions": {}
      },
      "name": "Success Notification",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [2200, 400],
      "credentials": {
        "slackOAuth2Api": {
          "id": "slack-oauth2",
          "name": "Slack OAuth2"
        }
      },
      "id": "success-notification-001"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "error-condition",
              "leftValue": "={{ $json.error }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "name": "Error Detection",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1000, 600],
      "id": "error-detection-001"
    },
    {
      "parameters": {
        "channel": "#ai-alerts",
        "text": "🚨 **AI Content System Error**\n\n**Error Details:**\n• **Node:** {{ $json.error.node }}\n• **Message:** {{ $json.error.message }}\n• **Time:** {{ $now }}\n• **Execution ID:** {{ $runId }}\n\n**Context:**\n• **Date:** {{ JSON.parse($('Initialize System Context').item.json.system_context).date }}\n• **Request Type:** {{ JSON.parse($('Initialize System Context').item.json.system_context).requestType }}\n\n**Recovery Actions:**\n1. Check API credentials and limits\n2. Verify database connections\n3. Review error logs for patterns\n4. Consider manual intervention if needed\n\n**Next Steps:**\n• System will attempt auto-recovery\n• Manual review recommended\n• Check all integrations\n\n*AI Error Handler v1.0*",
        "otherOptions": {}
      },
      "name": "Error Notification",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [1200, 700],
      "credentials": {
        "slackOAuth2Api": {
          "id": "slack-oauth2",
          "name": "Slack OAuth2"
        }
      },
      "id": "error-notification-001"
    }
  ],
  "connections": {
    "Daily Schedule Trigger": {
      "main": [
        [
          {
            "node": "Merge Triggers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Manual Webhook Trigger": {
      "main": [
        [
          {
            "node": "Merge Triggers",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge Triggers": {
      "main": [
        [
          {
            "node": "Initialize System Context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Initialize System Context": {
      "main": [
        [
          {
            "node": "Check Content Performance Database",
            "type": "main",
            "index": 0
          },
          {
            "node": "Analyze Audience Database",
            "type": "main",
            "index": 0
          },
          {
            "node": "Error Detection",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Content Performance Database": {
      "main": [
        [
          {
            "node": "AI Strategy Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze Audience Database": {
      "main": [
        [
          {
            "node": "AI Strategy Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Strategy Agent": {
      "main": [
        [
          {
            "node": "AI Content Creator Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Content Creator Agent": {
      "main": [
        [
          {
            "node": "AI LinkedIn Optimizer Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI LinkedIn Optimizer Agent": {
      "main": [
        [
          {
            "node": "Save Blog to Google Drive",
            "type": "main",
            "index": 0
          },
          {
            "node": "Track in Google Sheets",
            "type": "main",
            "index": 0
          },
          {
            "node": "Post to LinkedIn",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Blog to Google Drive": {
      "main": [
        [
          {
            "node": "Update Performance Database",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Track in Google Sheets": {
      "main": [
        [
          {
            "node": "AI Performance Analyzer Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post to LinkedIn": {
      "main": [
        [
          {
            "node": "Update Performance Database",
            "type": "main",
            "index": 0
          },
          {
            "node": "AI Performance Analyzer Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Performance Database": {
      "main": [
        [
          {
            "node": "Success Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Performance Analyzer Agent": {
      "main": [
        [
          {
            "node": "Success Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Detection": {
      "main": [
        [],
        [
          {
            "node": "Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": {
      "id": "error-handler-workflow"
    }
  },
  "staticData": null,
  "tags": ["ai-agents", "content-automation", "linkedin", "blog", "advanced"],
  "triggerCount": 2,
  "updatedAt": "2024-01-15T00:00:00.000Z",
  "versionId": "2.0"
} 